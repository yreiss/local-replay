

playcap.py is a utility mainly suitable for transmitting IP packets contained in a a pcap file captured on a LAN interface of a router through virtual interfaces of a single machine. 

This allows checking how the IP layer mechanisms (e.g. netfilter) or related mechanism (e.g. nfqueue based IPS) behaves for specified traffic.

playcap is intended to be run within a separate network namespace. 
The suggested way is to build netbash.c (using gcc) and run it as root (or sudo). Then run the additional command (works on Ubuntu):
ifconfig lo 127.0.0.1 netmask 255.0.0.0 up

Once in the new bash, you can set up the network name space as you wish (e.g. apply specific iptables rules).

Running playcap for a specific pcap file does the following:
The application (specifically the topologizer module) analyses the pcap and tries to figure which subnet is connected to the interface on which the pcap was captured.
Then it creates [currently 2] tun interface, one for the LAN and one for the other networks (wan or other LAN subnets)
When creating the TUN device for the LAN with the correct address and mask, the routing table is automatically updated with the subnet of the LAN. 
Since the 'wan' inteface is not known (because the capture was done on the LAN), a random IP number is chosen for the wan interface and the routing table is updated manually so that the 'wan' interface is the default GW.
The final step is writing the packets into the appropriate interface and reading them from the appropriate interface. This is done packet by packet.

We are not interested in broadcast or multicast packets as they do not go through the IP layer so the application filters out these packets.
Also, packets to or from the GW are filtered out.


TODO
- Honoring timestamps
- Live addresses: An issue that needs to be addressed is that the system may require specific addresses to be accessible. E.g. for backend services or controling the application. We may need to create an interface (Veth) to the real world and route to it all required addresses.
- Do we want to handle packets within the same network (LAN to LAN)?
- Do we want to handle packets sent to and from the address of the lan interface?




